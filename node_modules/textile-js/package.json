{
  "name": "textile-js",
  "description": "A full-featured JavaScript Textile parser",
  "author": {
    "name": "Borgar Þorsteinsson"
  },
  "version": "0.1.8",
  "main": "./lib/textile-js",
  "bin": {
    "textile-js": "./bin/textile"
  },
  "preferGlobal": false,
  "repository": {
    "type": "git",
    "url": "git://github.com/borgar/textile-js.git"
  },
  "homepage": "https://github.com/borgar/textile-js",
  "bugs": {
    "url": "http://github.com/borgar/textile-js/issues"
  },
  "keywords": [
    "textile",
    "markup",
    "html"
  ],
  "tags": [
    "textile",
    "markup",
    "html"
  ],
  "readme": "h1. textile.js\n\nAttempt at an implementation of fully featured Textile parser in JavaScript that runs reasonably fast and mostly avoids outputting broken HTML.\n\nGive it a go in \"a live textile web editor\":http://borgar.github.com/textile-js/.\n\n\nh2. Install\n\nbc. $ npm install textile-js\n\n\nh2. Options\n\nThe basic interface mimics \"marked\":https://github.com/chjj/marked, the popular markdown parser. So if you use that in your project then you can support Textile as well with minimal effort.\n\nCurrently, the only supported option is @breaks@ which can be used to enable/disable the default behavior of line-breaking single newlines within blocks.\n\n\nh2. Usage\n\nbc. console.log( textile( \"I am using __textile__.\" ) );\n\nYou can also get to the syntax tree, which uses \"JsonML\":http://www.jsonml.org/.\n\nbc. var jsonml = textile.parse( text );\nconsole.log( jsonml );\n\n\nh2. CLI\n\nbc. $ textile -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n\n\nh2. License\n\nCopyright (c) 2012, Borgar Þorsteinsson (MIT License).\n\nSee LICENSE.\n",
  "readmeFilename": "README.textile",
  "_id": "textile-js@0.1.8",
  "_from": "textile-js@~0.1.8"
}
